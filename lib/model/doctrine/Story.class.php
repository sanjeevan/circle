<?php

/**
 * Story
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    Circle
 * @subpackage model
 * @author     Sanjeevan Ambalavanar
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Story extends BaseStory
{
  public function setReadabilityContentFromHtml($html)
  {
    // load Readability class
    if (!class_exists("Readability")) {
      $vendor_dir = sfConfig::get("sf_root_dir") . "/vendor/";
      require_once($vendor_dir . "readability/Readability.php");
    }

    $readability = new Readability($html, $this->getUrl());
    $readability->converLinksToFootnotes = true;
    //$readability->debug = true;
    $result = $readability->init();

    // if there is content then set the readability content field
    if ($result) {
      $content = $readability->getContent()->innerHTML;
      $tidy = tidy_parse_string($content, array(
          "indent" => true, 
          "show-body-only" => true), "UTF8"
      );
      $tidy->cleanRepair();
      $content = $tidy->value;

      $this->setReadabilityContent($content);
      $this->save();

      return true;
    }

    return false;
  }

  public function getBiggestImage()
  {
    $largest = null;
    $area = 0;
    
    $files = $this->getFiles();
    foreach ($files as $f) {
      $a = $f->getMetaWidth() * $f->getMetaHeight();
      if ($a > $area) {
        $largest = $f;
        $area = $a;
      }
    }

    return $largest;
  }

  public function getTotalImages()
  {
    $q = Doctrine_Query::create()
      ->select("fts.*")
      ->from("FileToStory fts")
      ->where("fts.story_id = ?", $this->getId());

    return $q->count();
  }

  public function getFiles()
  {
    $q = Doctrine_Query::create()
      ->select("f.*, fts.*")
      ->from("File f, f.FileToStory fts")
      ->where("fts.story_id = ?", $this->getId());

    return $q->execute();
  }
}
