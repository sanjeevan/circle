<?php

/**
 * BaseStory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $thing_id
 * @property string $username
 * @property string $title
 * @property string $url
 * @property string $summary_html
 * @property string $readability_content
 * @property sfGuardUser $sfGuardUser
 * @property Thing $Thing
 * @property Doctrine_Collection $FileToStory
 * 
 * @method integer             getUserId()              Returns the current record's "user_id" value
 * @method integer             getThingId()             Returns the current record's "thing_id" value
 * @method string              getUsername()            Returns the current record's "username" value
 * @method string              getTitle()               Returns the current record's "title" value
 * @method string              getUrl()                 Returns the current record's "url" value
 * @method string              getSummaryHtml()         Returns the current record's "summary_html" value
 * @method string              getReadabilityContent()  Returns the current record's "readability_content" value
 * @method sfGuardUser         getSfGuardUser()         Returns the current record's "sfGuardUser" value
 * @method Thing               getThing()               Returns the current record's "Thing" value
 * @method Doctrine_Collection getFileToStory()         Returns the current record's "FileToStory" collection
 * @method Story               setUserId()              Sets the current record's "user_id" value
 * @method Story               setThingId()             Sets the current record's "thing_id" value
 * @method Story               setUsername()            Sets the current record's "username" value
 * @method Story               setTitle()               Sets the current record's "title" value
 * @method Story               setUrl()                 Sets the current record's "url" value
 * @method Story               setSummaryHtml()         Sets the current record's "summary_html" value
 * @method Story               setReadabilityContent()  Sets the current record's "readability_content" value
 * @method Story               setSfGuardUser()         Sets the current record's "sfGuardUser" value
 * @method Story               setThing()               Sets the current record's "Thing" value
 * @method Story               setFileToStory()         Sets the current record's "FileToStory" collection
 * 
 * @package    Circle
 * @subpackage model
 * @author     Sanjeevan Ambalavanar
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseStory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('story');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('thing_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('username', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('summary_html', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('readability_content', 'string', null, array(
             'type' => 'string',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Thing', array(
             'local' => 'thing_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('FileToStory', array(
             'local' => 'id',
             'foreign' => 'story_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'fields' => 
             array(
              0 => 'title',
             ),
             'canUpdate' => true,
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}