<?php

/**
 * BaseFileToStory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $file_id
 * @property integer $story_id
 * @property boolean $is_published
 * @property File $File
 * @property Story $Story
 * 
 * @method integer     getFileId()       Returns the current record's "file_id" value
 * @method integer     getStoryId()      Returns the current record's "story_id" value
 * @method boolean     getIsPublished()  Returns the current record's "is_published" value
 * @method File        getFile()         Returns the current record's "File" value
 * @method Story       getStory()        Returns the current record's "Story" value
 * @method FileToStory setFileId()       Sets the current record's "file_id" value
 * @method FileToStory setStoryId()      Sets the current record's "story_id" value
 * @method FileToStory setIsPublished()  Sets the current record's "is_published" value
 * @method FileToStory setFile()         Sets the current record's "File" value
 * @method FileToStory setStory()        Sets the current record's "Story" value
 * 
 * @package    Circle
 * @subpackage model
 * @author     Sanjeevan Ambalavanar
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFileToStory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('file_to_story');
        $this->hasColumn('file_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('story_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('is_published', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('File', array(
             'local' => 'file_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Story', array(
             'local' => 'story_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}